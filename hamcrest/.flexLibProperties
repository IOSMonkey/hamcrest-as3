<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<flexLibProperties includeAllClasses="false" useMultiPlatformConfig="false" version="1">
  <includeClasses>
    <classEntry path="org.hamcrest.AssertionError"/>
    <classEntry path="org.hamcrest.BaseDescription"/>
    <classEntry path="org.hamcrest.BaseMatcher"/>
    <classEntry path="org.hamcrest.CustomMatcher"/>
    <classEntry path="org.hamcrest.CustomTypeSafeMatcher"/>
    <classEntry path="org.hamcrest.Description"/>
    <classEntry path="org.hamcrest.DiagnosingMatcher"/>
    <classEntry path="org.hamcrest.Matcher"/>
    <classEntry path="org.hamcrest.NullDescription"/>
    <classEntry path="org.hamcrest.SelfDescribing"/>
    <classEntry path="org.hamcrest.StringDescription"/>
    <classEntry path="org.hamcrest.TypeSafeDiagnosingMatcher"/>
    <classEntry path="org.hamcrest.TypeSafeMatcher"/>
    <classEntry path="org.hamcrest.assertThat"/>
    <classEntry path="org.hamcrest.assertThatBoolean"/>
    <classEntry path="org.hamcrest.assertThatMatcher"/>
    <classEntry path="org.hamcrest.collection.EveryMatcher"/>
    <classEntry path="org.hamcrest.collection.InArrayMatcher"/>
    <classEntry path="org.hamcrest.collection.IsArrayContainingMatcher"/>
    <classEntry path="org.hamcrest.collection.IsArrayMatcher"/>
    <classEntry path="org.hamcrest.collection.IsArrayWithSizeMatcher"/>
    <classEntry path="org.hamcrest.collection.SortedByFieldsMatcher"/>
    <classEntry path="org.hamcrest.collection.SortedByMatcher"/>
    <classEntry path="org.hamcrest.collection.array"/>
    <classEntry path="org.hamcrest.collection.arrayWithSize"/>
    <classEntry path="org.hamcrest.collection.emptyArray"/>
    <classEntry path="org.hamcrest.collection.everyItem"/>
    <classEntry path="org.hamcrest.collection.hasItem"/>
    <classEntry path="org.hamcrest.collection.hasItems"/>
    <classEntry path="org.hamcrest.collection.inArray"/>
    <classEntry path="org.hamcrest.collection.sortedBy"/>
    <classEntry path="org.hamcrest.collection.sortedByFields"/>
    <classEntry path="org.hamcrest.core.AllOfMatcher"/>
    <classEntry path="org.hamcrest.core.AnyOfMatcher"/>
    <classEntry path="org.hamcrest.core.CombinableMatcher"/>
    <classEntry path="org.hamcrest.core.DescribedAsMatcher"/>
    <classEntry path="org.hamcrest.core.EvaluateMatcher"/>
    <classEntry path="org.hamcrest.core.GivenMatcher"/>
    <classEntry path="org.hamcrest.core.IsAnythingMatcher"/>
    <classEntry path="org.hamcrest.core.IsMatcher"/>
    <classEntry path="org.hamcrest.core.IsNotMatcher"/>
    <classEntry path="org.hamcrest.core.IsNothingMatcher"/>
    <classEntry path="org.hamcrest.core.ShortcutCombinationMatcher"/>
    <classEntry path="org.hamcrest.core.ThrowsMatcher"/>
    <classEntry path="org.hamcrest.core.allOf"/>
    <classEntry path="org.hamcrest.core.anyOf"/>
    <classEntry path="org.hamcrest.core.anything"/>
    <classEntry path="org.hamcrest.core.both"/>
    <classEntry path="org.hamcrest.core.describedAs"/>
    <classEntry path="org.hamcrest.core.either"/>
    <classEntry path="org.hamcrest.core.evaluate"/>
    <classEntry path="org.hamcrest.core.given"/>
    <classEntry path="org.hamcrest.core.isA"/>
    <classEntry path="org.hamcrest.core.not"/>
    <classEntry path="org.hamcrest.core.nothing"/>
    <classEntry path="org.hamcrest.core.throws"/>
    <classEntry path="org.hamcrest.date.DateAfterMatcher"/>
    <classEntry path="org.hamcrest.date.DateBeforeMatcher"/>
    <classEntry path="org.hamcrest.date.DateEqualMatcher"/>
    <classEntry path="org.hamcrest.date.dateAfter"/>
    <classEntry path="org.hamcrest.date.dateAfterOrEqual"/>
    <classEntry path="org.hamcrest.date.dateBefore"/>
    <classEntry path="org.hamcrest.date.dateBeforeOrEqual"/>
    <classEntry path="org.hamcrest.date.dateBetween"/>
    <classEntry path="org.hamcrest.date.dateEqual"/>
    <classEntry path="org.hamcrest.number.IsCloseToMatcher"/>
    <classEntry path="org.hamcrest.number.IsGreaterThanMatcher"/>
    <classEntry path="org.hamcrest.number.IsLessThanMatcher"/>
    <classEntry path="org.hamcrest.number.IsNotANumberMatcher"/>
    <classEntry path="org.hamcrest.number.IsNumberMatcher"/>
    <classEntry path="org.hamcrest.number.atLeast"/>
    <classEntry path="org.hamcrest.number.atMost"/>
    <classEntry path="org.hamcrest.number.between"/>
    <classEntry path="org.hamcrest.number.closeTo"/>
    <classEntry path="org.hamcrest.number.greaterThan"/>
    <classEntry path="org.hamcrest.number.greaterThanOrEqualTo"/>
    <classEntry path="org.hamcrest.number.isNotANumber"/>
    <classEntry path="org.hamcrest.number.isNumber"/>
    <classEntry path="org.hamcrest.number.lessThan"/>
    <classEntry path="org.hamcrest.number.lessThanOrEqualTo"/>
    <classEntry path="org.hamcrest.object.HasPropertiesMatcher"/>
    <classEntry path="org.hamcrest.object.HasPropertyChainMatcher"/>
    <classEntry path="org.hamcrest.object.HasPropertyMatcher"/>
    <classEntry path="org.hamcrest.object.HasPropertyWithValueMatcher"/>
    <classEntry path="org.hamcrest.object.IsEqualMatcher"/>
    <classEntry path="org.hamcrest.object.IsFalseMatcher"/>
    <classEntry path="org.hamcrest.object.IsInstanceOfMatcher"/>
    <classEntry path="org.hamcrest.object.IsInterfaceMatcher"/>
    <classEntry path="org.hamcrest.object.IsNullMatcher"/>
    <classEntry path="org.hamcrest.object.IsSameMatcher"/>
    <classEntry path="org.hamcrest.object.IsStrictlyEqualMatcher"/>
    <classEntry path="org.hamcrest.object.IsTrueMatcher"/>
    <classEntry path="org.hamcrest.object.equalTo"/>
    <classEntry path="org.hamcrest.object.hasProperties"/>
    <classEntry path="org.hamcrest.object.hasProperty"/>
    <classEntry path="org.hamcrest.object.hasPropertyChain"/>
    <classEntry path="org.hamcrest.object.hasPropertyWithValue"/>
    <classEntry path="org.hamcrest.object.instanceOf"/>
    <classEntry path="org.hamcrest.object.isFalse"/>
    <classEntry path="org.hamcrest.object.isFalsey"/>
    <classEntry path="org.hamcrest.object.isInterface"/>
    <classEntry path="org.hamcrest.object.isNull"/>
    <classEntry path="org.hamcrest.object.isTrue"/>
    <classEntry path="org.hamcrest.object.isTruthy"/>
    <classEntry path="org.hamcrest.object.notNullValue"/>
    <classEntry path="org.hamcrest.object.nullOr"/>
    <classEntry path="org.hamcrest.object.nullValue"/>
    <classEntry path="org.hamcrest.object.sameInstance"/>
    <classEntry path="org.hamcrest.object.strictlyEqualTo"/>
    <classEntry path="org.hamcrest.text.ContainsStringsMatcher"/>
    <classEntry path="org.hamcrest.text.EmptyStringMatcher"/>
    <classEntry path="org.hamcrest.text.RegExpMatcher"/>
    <classEntry path="org.hamcrest.text.StringContainsMatcher"/>
    <classEntry path="org.hamcrest.text.StringEndsWithMatcher"/>
    <classEntry path="org.hamcrest.text.StringStartsWithMatcher"/>
    <classEntry path="org.hamcrest.text.SubstringMatcher"/>
    <classEntry path="org.hamcrest.text.containsString"/>
    <classEntry path="org.hamcrest.text.containsStrings"/>
    <classEntry path="org.hamcrest.text.emptyString"/>
    <classEntry path="org.hamcrest.text.endsWith"/>
    <classEntry path="org.hamcrest.text.re"/>
    <classEntry path="org.hamcrest.text.startsWith"/>
    <classEntry path="org.hamcrest.collection.filterByMatcher"/>
    <classEntry path="org.hamcrest.collection.indexOfByMatcher"/>
    <classEntry path="org.hamcrest.collection.rejectByMatcher"/>
    <classEntry path="org.hamcrest.filter.FilterFunction"/>
    <classEntry path="org.hamcrest.filter.IFilterFunction"/>
    <classEntry path="org.hamcrest.mxml.BaseMXMLMatcher"/>
    <classEntry path="org.hamcrest.mxml.BaseMXMLMatcherComposite"/>
    <classEntry path="org.hamcrest.mxml.BaseMXMLMatcherContainer"/>
    <classEntry path="org.hamcrest.mxml.MXMLMatcher"/>
    <classEntry path="org.hamcrest.mxml.MXMLMatcherComposite"/>
    <classEntry path="org.hamcrest.mxml.MXMLMatcherContainer"/>
    <classEntry path="org.hamcrest.mxml.collection.Array"/>
    <classEntry path="org.hamcrest.mxml.collection.ArrayWithSize"/>
    <classEntry path="org.hamcrest.mxml.collection.EmptyArray"/>
    <classEntry path="org.hamcrest.mxml.collection.EveryItem"/>
    <classEntry path="org.hamcrest.mxml.collection.HasItem"/>
    <classEntry path="org.hamcrest.mxml.collection.HasItems"/>
    <classEntry path="org.hamcrest.mxml.collection.InArray"/>
    <classEntry path="org.hamcrest.mxml.core.AllOf"/>
    <classEntry path="org.hamcrest.mxml.core.AnyOf"/>
    <classEntry path="org.hamcrest.mxml.core.Anything"/>
    <classEntry path="org.hamcrest.mxml.core.DescribedAs"/>
    <classEntry path="org.hamcrest.mxml.core.Evaluate"/>
    <classEntry path="org.hamcrest.mxml.core.Given"/>
    <classEntry path="org.hamcrest.mxml.core.Not"/>
    <classEntry path="org.hamcrest.mxml.date.DateAfter"/>
    <classEntry path="org.hamcrest.mxml.date.DateBefore"/>
    <classEntry path="org.hamcrest.mxml.date.DateBetween"/>
    <classEntry path="org.hamcrest.mxml.date.DateEqualTo"/>
    <classEntry path="org.hamcrest.mxml.number.Between"/>
    <classEntry path="org.hamcrest.mxml.number.CloseTo"/>
    <classEntry path="org.hamcrest.mxml.number.GreaterThan"/>
    <classEntry path="org.hamcrest.mxml.number.GreaterThanOrEqualTo"/>
    <classEntry path="org.hamcrest.mxml.number.LessThan"/>
    <classEntry path="org.hamcrest.mxml.number.LessThanOrEqualTo"/>
    <classEntry path="org.hamcrest.mxml.object.EqualTo"/>
    <classEntry path="org.hamcrest.mxml.object.HasProperties"/>
    <classEntry path="org.hamcrest.mxml.object.HasProperty"/>
    <classEntry path="org.hamcrest.mxml.object.HasPropertyChain"/>
    <classEntry path="org.hamcrest.mxml.object.InstanceOf"/>
    <classEntry path="org.hamcrest.mxml.object.IsFalse"/>
    <classEntry path="org.hamcrest.mxml.object.IsTrue"/>
    <classEntry path="org.hamcrest.mxml.object.NotNull"/>
    <classEntry path="org.hamcrest.mxml.object.Null"/>
    <classEntry path="org.hamcrest.mxml.object.SameInstance"/>
    <classEntry path="org.hamcrest.mxml.text.ContainsString"/>
    <classEntry path="org.hamcrest.mxml.text.EmptyString"/>
    <classEntry path="org.hamcrest.mxml.text.EndsWith"/>
    <classEntry path="org.hamcrest.mxml.text.MatchesPattern"/>
    <classEntry path="org.hamcrest.mxml.text.StartsWith"/>
    <classEntry path="org.hamcrest.mxml.text.StringMXMLMatcher"/>
    <classEntry path="org.hamcrest.validator.MatcherValidator"/>
    <classEntry path="org.hamcrest.collection.everyByMatcher"/>
    <classEntry path="org.hamcrest.collection.someByMatcher"/>
    <classEntry path="org.hamcrest.collection.indexesOfByMatcher"/>
    <classEntry path="org.hamcrest.object.isNotNull"/>
  </includeClasses>
  <includeResources/>
  <namespaceManifests/>
</flexLibProperties>
